import{k as x,l as E,m as $,p as N,q as M,r as I,s as R,v as W,x as D,y as p,z as B,A as j,B as L,C as U,D as V}from"./entry.abb47eca.js";async function C(e,t){return await H(t).catch(i=>(console.error("Failed to get image meta for "+t,i+""),{width:0,height:0,ratio:0}))}async function H(e){if(typeof Image>"u")throw new TypeError("Image not supported");return new Promise((t,s)=>{const i=new Image;i.onload=()=>{const n={width:i.width,height:i.height,ratio:i.width/i.height};t(n)},i.onerror=n=>s(n),i.src=e})}function A(e){return t=>t?e[t]||t:e.missingValue}function T({formatter:e,keyMap:t,joinWith:s="/",valueMap:i}={}){e||(e=(r,o)=>`${r}=${o}`),t&&typeof t!="function"&&(t=A(t));const n=i||{};return Object.keys(n).forEach(r=>{typeof n[r]!="function"&&(n[r]=A(n[r]))}),(r={})=>Object.entries(r).filter(([d,u])=>typeof u<"u").map(([d,u])=>{const l=n[d];return typeof l=="function"&&(u=l(r[d])),d=typeof t=="function"?t(d):d,e(d,u)}).join(s)}function h(e=""){if(typeof e=="number")return e;if(typeof e=="string"&&e.replace("px","").match(/^\d+$/g))return parseInt(e,10)}function O(e=""){if(e===void 0||!e.length)return[];const t=e.split(" ").map(s=>parseInt(s.replace("x","")));return t.filter((s,i)=>t.indexOf(s)===i)}function F(e){const t={options:e},s=(n,r={})=>P(t,n,r),i=(n,r={},o={})=>s(n,{...o,modifiers:M(r,o.modifiers||{})}).url;for(const n in e.presets)i[n]=(r,o,d)=>i(r,o,{...e.presets[n],...d});return i.options=e,i.getImage=s,i.getMeta=(n,r)=>G(t,n,r),i.getSizes=(n,r)=>X(t,n,r),i.getDensitySet=(n,r)=>Y(t,n,r),t.$img=i,i}async function G(e,t,s){const i=P(e,t,{...s});return typeof i.getMeta=="function"?await i.getMeta():await C(e,i.url)}function P(e,t,s){var l,g;if(typeof t!="string"||t==="")throw new TypeError(`input must be a string (received ${typeof t}: ${JSON.stringify(t)})`);if(t.startsWith("data:"))return{url:t};const{provider:i,defaults:n}=J(e,s.provider||e.options.provider),r=Q(e,s.preset);if(t=x(t)?t:E(t),!i.supportsAlias)for(const v in e.options.alias)t.startsWith(v)&&(t=$(e.options.alias[v],t.substr(v.length)));if(i.validateDomains&&x(t)){const v=N(t).host;if(!e.options.domains.find(y=>y===v))return{url:t}}const o=M(s,r,n);o.modifiers={...o.modifiers};const d=o.modifiers.format;(l=o.modifiers)!=null&&l.width&&(o.modifiers.width=h(o.modifiers.width)),(g=o.modifiers)!=null&&g.height&&(o.modifiers.height=h(o.modifiers.height));const u=i.getImage(t,o,e);return u.format=u.format||d||"",u}function J(e,t){const s=e.options.providers[t];if(!s)throw new Error("Unknown provider: "+t);return s}function Q(e,t){if(!t)return{};if(!e.options.presets[t])throw new Error("Unknown preset: "+t);return e.options.presets[t]}function X(e,t,s){var a,m;const i=h((a=s.modifiers)==null?void 0:a.width),n=h((m=s.modifiers)==null?void 0:m.height),r=s.densities?O(s.densities):e.options.densities,o=i&&n?n/i:0,d=[],u=[],l={};if(typeof s.sizes=="string")for(const c of s.sizes.split(/[\s,]+/).filter(f=>f)){const f=c.split(":");f.length===2&&(l[f[0].trim()]=f[1].trim())}else Object.assign(l,s.sizes);for(const c in l){const f=e.options.screens&&e.options.screens[c]||parseInt(c);let w=String(l[c]);const z=w.endsWith("vw");if(!z&&/^\d+$/.test(w)&&(w=w+"px"),!z&&!w.endsWith("px"))continue;let S=parseInt(w);if(!f||!S)continue;z&&(S=Math.round(S/100*f));const _=o?Math.round(S*o):n;if(d.push({size:w,screenMaxWidth:f,media:`(max-width: ${f}px)`}),r)for(const b of r)u.push({width:S*b,src:e.$img(t,{...s.modifiers,width:S*b,height:_?_*b:void 0},s)})}d.sort((c,f)=>c.screenMaxWidth-f.screenMaxWidth),d[d.length-1]&&(d[d.length-1].media="");let g=null;for(let c=d.length-1;c>=0;c--){const f=d[c];f.media===g&&d.splice(c,1),g=f.media}u.sort((c,f)=>c.width-f.width);let v=null;for(let c=u.length-1;c>=0;c--){const f=u[c];f.width===v&&u.splice(c,1),v=f.width}const y=u[u.length-1];return{sizes:d.map(c=>`${c.media?c.media+" ":""}${c.size}`).join(", "),srcset:u.map(c=>`${c.src} ${c.width}w`).join(", "),src:y==null?void 0:y.src}}function Y(e,t,s){const i=s.densities?O(s.densities):e.options.densities;if(i.length===0)return;const n=[];for(const r of i){const o={...s.modifiers};o.width&&(o.width=o.width*r),o.height&&(o.height=o.height*r),n.push({density:`${r}x`,src:e.$img(t,o,s)})}return n.map(r=>`${r.src} ${r.density}`).join(", ")}const Z=T({keyMap:{format:"f",fit:"fit",width:"w",height:"h",resize:"s",quality:"q",background:"b"},joinWith:"&",formatter:(e,t)=>I(e)+"_"+I(t)}),k=(e,{modifiers:t={},baseURL:s}={},i)=>{t.width&&t.height&&(t.resize=`${t.width}x${t.height}`,delete t.width,delete t.height);const n=Z(t)||"_";return s||(s=$(i.options.nuxt.baseURL,"/_ipx")),{url:$(s,n,R(e))}},K=!0,ee=!0,te=Object.freeze(Object.defineProperty({__proto__:null,getImage:k,supportsAlias:ee,validateDomains:K},Symbol.toStringTag,{value:"Module"})),q={screens:{xs:320,sm:640,md:768,lg:1024,xl:1280,xxl:1536,"2xl":1536},presets:{},provider:"ipx",domains:[],alias:{},densities:[1,2]};q.providers={ipx:{provider:te,defaults:void 0}};const ie=()=>{const e=D(),t=W();return t.$img||t._img||(t._img=F({...q,nuxt:{baseURL:e.app.baseURL}}))},se={src:{type:String,required:!0},format:{type:String,default:void 0},quality:{type:[Number,String],default:void 0},background:{type:String,default:void 0},fit:{type:String,default:void 0},modifiers:{type:Object,default:void 0},preset:{type:String,default:void 0},provider:{type:String,default:void 0},sizes:{type:[Object,String],default:void 0},densities:{type:String,default:void 0},preload:{type:Boolean,default:void 0},width:{type:[String,Number],default:void 0},height:{type:[String,Number],default:void 0},alt:{type:String,default:void 0},referrerpolicy:{type:String,default:void 0},usemap:{type:String,default:void 0},longdesc:{type:String,default:void 0},ismap:{type:Boolean,default:void 0},loading:{type:String,default:void 0},crossorigin:{type:[Boolean,String],default:void 0,validator:e=>["anonymous","use-credentials","",!0,!1].includes(e)},decoding:{type:String,default:void 0,validator:e=>["async","auto","sync"].includes(e)}},re=e=>{const t=p(()=>({provider:e.provider,preset:e.preset})),s=p(()=>({width:h(e.width),height:h(e.height),alt:e.alt,referrerpolicy:e.referrerpolicy,usemap:e.usemap,longdesc:e.longdesc,ismap:e.ismap,crossorigin:e.crossorigin===!0?"anonymous":e.crossorigin||void 0,loading:e.loading,decoding:e.decoding})),i=p(()=>({...e.modifiers,width:h(e.width),height:h(e.height),format:e.format,quality:e.quality,background:e.background,fit:e.fit}));return{options:t,attrs:s,modifiers:i}},ne={...se,placeholder:{type:[Boolean,String,Number,Array],default:void 0}},ae=B({name:"NuxtImg",props:ne,emits:["load","error"],setup:(e,t)=>{const s=ie(),i=re(e),n=j(!1),r=p(()=>s.getSizes(e.src,{...i.options.value,sizes:e.sizes,densities:e.densities,modifiers:{...i.modifiers.value,width:h(e.width),height:h(e.height)}})),o=p(()=>{const a={...i.attrs.value,"data-nuxt-img":""};return e.sizes&&(!e.placeholder||n.value)?(a.sizes=r.value.sizes,a.srcset=r.value.srcset):(e.densities||s.options.densities)&&(a.srcset=s.getDensitySet(e.src,{...i.options.value,densities:e.densities,modifiers:{...i.modifiers.value,width:h(e.width),height:h(e.height)}})),a}),d=p(()=>{let a=e.placeholder;if(a===""&&(a=!0),!a||n.value)return!1;if(typeof a=="string")return a;const m=Array.isArray(a)?a:typeof a=="number"?[a,a]:[10,10];return s(e.src,{...i.modifiers.value,width:m[0],height:m[1],quality:m[2]||50},i.options.value)}),u=p(()=>e.sizes?r.value.src:s(e.src,i.modifiers.value,i.options.value)),l=p(()=>d.value?d.value:u.value);if(e.preload){const a=Object.values(r.value).every(m=>m);L({link:[{rel:"preload",as:"image",...a?{href:r.value.src,imagesizes:r.value.sizes,imagesrcset:r.value.srcset}:{href:l.value}}]})}const g=j(),y=W().isHydrating;return U(()=>{if(d.value){const a=new Image;a.src=u.value,e.sizes&&(a.sizes=r.value.sizes,a.srcset=r.value.srcset),a.onload=m=>{n.value=!0,t.emit("load",m)};return}g.value&&(g.value.complete&&y&&(g.value.getAttribute("data-error")?t.emit("error",new Event("error")):t.emit("load",new Event("load"))),g.value.onload=a=>{t.emit("load",a)},g.value.onerror=a=>{t.emit("error",a)})}),()=>V("img",{ref:g,src:l.value,...o.value,...t.attrs})}});export{ae as _};
